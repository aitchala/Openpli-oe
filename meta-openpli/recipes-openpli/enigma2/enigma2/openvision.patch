diff --git a/data/setup.xml b/data/setup.xml
index dae1d7559..8b8474281 100644
--- a/data/setup.xml
+++ b/data/setup.xml
@@ -1,6 +1,7 @@
 <setupxml>
 	<setup key="timezone" title="Timezone">
 		<item level="0" text="Timezone">config.timezone.val</item>
+		<item level="1" text="Use transponder time">config.misc.useTransponderTime</item>
 	</setup>
 	<setup key="avsetup">
 		<!-- this is just a placeholder, the Videomode plugin implements this submenu -->
diff --git a/main/bsod.cpp b/main/bsod.cpp
index a1bea5f9a..f7fbf028b 100644
--- a/main/bsod.cpp
+++ b/main/bsod.cpp
@@ -23,7 +23,7 @@
 
 static const char *crash_emailaddr =
 #ifndef CRASH_EMAILADDR
-	"the OpenPLi forum";
+	"the Open Vision forum or https://github.com/OpenVisionE2/openvision-oe/issues";
 #else
 	CRASH_EMAILADDR;
 #endif
@@ -155,7 +155,7 @@ void bsodFatal(const char *component)
 		strftime(tm_str, sizeof(tm_str), "%a %b %_d %T %Y", &tm);
 
 		fprintf(f,
-			"OpenPLi Enigma2 crash log\n\n"
+			"Open Vision Enigma2 crash log\n\n"
 			"crashdate=%s\n"
 			"compiledate=%s\n"
 			"skin=%s\n"
diff --git a/lib/python/Components/AVSwitch.py b/lib/python/Components/AVSwitch.py
index 1e5f9ef5c..18893055e 100644
--- a/lib/python/Components/AVSwitch.py
+++ b/lib/python/Components/AVSwitch.py
@@ -111,7 +111,7 @@ def InitAVSwitch():
 			policy2_choices.update({"auto": _("Auto")})
 	except:
 		pass
-	config.av.policy_169 = ConfigSelection(choices=policy2_choices, default = "letterbox")
+	config.av.policy_169 = ConfigSelection(choices=policy2_choices, default = "scale")
 	policy_choices = {
 	# TRANSLATORS: (aspect ratio policy: black bars on left/right) in doubt, keep english term.
 	"pillarbox": _("Pillarbox"),
@@ -137,7 +137,7 @@ def InitAVSwitch():
 			policy_choices.update({"auto": _("Auto")})
 	except:
 		pass
-	config.av.policy_43 = ConfigSelection(choices=policy_choices, default = "pillarbox")
+	config.av.policy_43 = ConfigSelection(choices=policy_choices, default = "scale")
 	config.av.tvsystem = ConfigSelection(choices = {"pal": _("PAL"), "ntsc": _("NTSC"), "multinorm": _("multinorm")}, default="pal")
 	config.av.wss = ConfigEnableDisable(default = True)
 	config.av.generalAC3delay = ConfigSelectionNumber(-1000, 1000, 5, default = 0)
diff --git a/lib/python/Components/Network.py b/lib/python/Components/Network.py
index d3c5e6ebd..fe8223829 100644
--- a/lib/python/Components/Network.py
+++ b/lib/python/Components/Network.py
@@ -423,7 +423,7 @@ class Network:
 	def checkNetworkState(self,statecallback):
 		self.NetworkState = 0
 		self.pingConsole = Console()
-		for server in ("www.openpli.org", "www.google.nl", "www.google.com"):
+		for server in ("www.google.com", "www.bing.com", "www.microsoft.com"):
 			self.pingConsole.ePopen(("/bin/ping", "/bin/ping", "-c", "1", server), self.checkNetworkStateFinished,statecallback)
 
 	def checkNetworkStateFinished(self, result, retval,extra_args):
@@ -495,7 +495,7 @@ class Network:
 	def checkDNSLookup(self,statecallback):
 		self.DnsState = 0
 		self.dnsConsole = Console()
-		for server in ("www.openpli.org", "www.google.nl", "www.google.com"):
+		for server in ("www.google.com", "www.bing.com", "www.microsoft.com"):
 			self.dnsConsole.ePopen(("/usr/bin/nslookup", "/usr/bin/nslookup", server), self.checkDNSLookupFinished, statecallback)
 
 	def checkDNSLookupFinished(self, result, retval,extra_args):
diff --git a/lib/python/Components/NimManager.py b/lib/python/Components/NimManager.py
index 6f9e0b56e..42d5ebb7d 100644
--- a/lib/python/Components/NimManager.py
+++ b/lib/python/Components/NimManager.py
@@ -1574,7 +1574,7 @@ def InitNimManager(nimmgr, update_slots = []):
 					"enabled": _("enabled"),
 					"nothing": _("disabled"),
 					},
-				default = "enabled")
+				default = "nothing")
 			createCableConfig(nim, x)
 		elif slot.isCompatible("DVB-T"):
 			nim.configMode = ConfigSelection(
@@ -1582,7 +1582,7 @@ def InitNimManager(nimmgr, update_slots = []):
 					"enabled": _("enabled"),
 					"nothing": _("disabled"),
 					},
-				default = "enabled")
+				default = "nothing")
 			createTerrestrialConfig(nim, x)
 		elif slot.isCompatible("ATSC"):
 			nim.configMode = ConfigSelection(
@@ -1590,7 +1590,7 @@ def InitNimManager(nimmgr, update_slots = []):
 					"enabled": _("enabled"),
 					"nothing": _("disabled"),
 					},
-				default = "enabled")
+				default = "nothing")
 			createATSCConfig(nim, x)
 		else:
 			empty_slots += 1
diff --git a/lib/python/Components/Sources/FrontendStatus.py b/lib/python/Components/Sources/FrontendStatus.py
index 0e2235089..f6f4b09cd 100644
--- a/lib/python/Components/Sources/FrontendStatus.py
+++ b/lib/python/Components/Sources/FrontendStatus.py
@@ -21,6 +21,8 @@ class FrontendStatus(Source):
 			self.invalidate()
 		else:
 			self.snr = status.get("tuner_signal_quality")
+			if self.snr < 0:
+				self.snr = 65536
 			self.snr_db = status.get("tuner_signal_quality_db")
 			self.agc = status.get("tuner_signal_power")
 			self.ber = status.get("tuner_bit_error_rate")
diff --git a/lib/python/Components/UsageConfig.py b/lib/python/Components/UsageConfig.py
index 7c452942e..f84872ce0 100644
--- a/lib/python/Components/UsageConfig.py
+++ b/lib/python/Components/UsageConfig.py
@@ -27,11 +27,11 @@ def InitUsageConfig():
 	config.usage.hide_number_markers = ConfigYesNo(default = True)
 	config.usage.hide_number_markers.addNotifier(refreshServiceList)
 
-	config.usage.servicetype_icon_mode = ConfigSelection(default = "0", choices = [("0", _("None")), ("1", _("Left from servicename")), ("2", _("Right from servicename"))])
+	config.usage.servicetype_icon_mode = ConfigSelection(default = "1", choices = [("0", _("None")), ("1", _("Left from servicename")), ("2", _("Right from servicename"))])
 	config.usage.servicetype_icon_mode.addNotifier(refreshServiceList)
-	config.usage.crypto_icon_mode = ConfigSelection(default = "0", choices = [("0", _("None")), ("1", _("Left from servicename")), ("2", _("Right from servicename"))])
+	config.usage.crypto_icon_mode = ConfigSelection(default = "2", choices = [("0", _("None")), ("1", _("Left from servicename")), ("2", _("Right from servicename"))])
 	config.usage.crypto_icon_mode.addNotifier(refreshServiceList)
-	config.usage.record_indicator_mode = ConfigSelection(default = "0", choices = [("0", _("None")), ("1", _("Left from servicename")), ("2", _("Right from servicename")), ("3", _("Red colored"))])
+	config.usage.record_indicator_mode = ConfigSelection(default = "3", choices = [("0", _("None")), ("1", _("Left from servicename")), ("2", _("Right from servicename")), ("3", _("Red colored"))])
 	config.usage.record_indicator_mode.addNotifier(refreshServiceList)
 
 	choicelist = [("-1", _("Disable"))]
@@ -40,7 +40,7 @@ def InitUsageConfig():
 	config.usage.servicelist_column = ConfigSelection(default="-1", choices=choicelist)
 	config.usage.servicelist_column.addNotifier(refreshServiceList)
 
-	config.usage.service_icon_enable = ConfigYesNo(default = False)
+	config.usage.service_icon_enable = ConfigYesNo(default = True)
 	config.usage.service_icon_enable.addNotifier(refreshServiceList)
 	config.usage.servicelist_cursor_behavior = ConfigSelection(default = "standard", choices = [
 		("standard", _("Standard")),
@@ -57,7 +57,7 @@ def InitUsageConfig():
 	config.usage.multiepg_ask_bouquet = ConfigYesNo(default = False)
 
 	config.usage.quickzap_bouquet_change = ConfigYesNo(default = False)
-	config.usage.e1like_radio_mode = ConfigYesNo(default = True)
+	config.usage.e1like_radio_mode = ConfigYesNo(default = False)
 	choicelist = [("0", _("No timeout"))]
 	for i in range(1, 12):
 		choicelist.append((str(i), ngettext("%d second", "%d seconds", i) % i))
@@ -80,13 +80,13 @@ def InitUsageConfig():
 		("a_z", _("alphabetical")),
 		("default", _("Default")),
 		("user", _("user defined")),])
-	config.usage.menu_show_numbers = ConfigSelection(default = "no", choices = [("no", _("no")), ("menu&plugins", _("in menu and plugins")), ("menu", _("in menu only")), ("plugins", _("in plugins only"))])
+	config.usage.menu_show_numbers = ConfigYesNo(default = True)
 	config.usage.menu_path = ConfigSelection(default = "off", choices = [
 		("off", _("Disabled")),
 		("small", _("Small")),
 		("large", _("Large")),])
 	config.usage.enable_tt_caching = ConfigYesNo(default = True)
-	config.usage.sort_settings = ConfigYesNo(default=False)
+	config.usage.sort_settings = ConfigYesNo(default=True)
 	choicelist = []
 	for i in (10, 30):
 		choicelist.append((str(i), ngettext("%d second", "%d seconds", i) % i))
@@ -118,7 +118,7 @@ def InitUsageConfig():
 	config.usage.allowed_timeshift_paths = ConfigLocations(default = ["/media/hdd/"])
 
 	config.usage.movielist_trashcan = ConfigYesNo(default=True)
-	config.usage.movielist_trashcan_days = ConfigNumber(default=8)
+	config.usage.movielist_trashcan_days = ConfigNumber(default=7)
 	config.usage.movielist_trashcan_reserve = ConfigNumber(default=40)
 	config.usage.on_movie_start = ConfigSelection(default = "resume", choices = [
 		("ask yes", _("Ask user") + " " + _("default") + " " + _("yes")),
@@ -135,7 +135,7 @@ def InitUsageConfig():
 	config.usage.leave_movieplayer_onExit = ConfigSelection(default = "popup", choices = [
 		("no", _("no")), ("popup", _("With popup")), ("without popup", _("Without popup")), ("movielist", _("Return to movie list")) ])
 
-	config.usage.setup_level = ConfigSelection(default = "simple", choices = [
+	config.usage.setup_level = ConfigSelection(default = "expert", choices = [
 		("simple", _("Normal")),
 		("intermediate", _("Advanced")),
 		("expert", _("Expert")) ])
@@ -215,7 +215,7 @@ def InitUsageConfig():
 		choicelist.append((str(i), ngettext("%d minute", "%d minutes", m) % m))
 	config.usage.timeshift_start_delay = ConfigSelection(default = "0", choices = choicelist)
 
-	config.usage.alternatives_priority = ConfigSelection(default = "0", choices = [
+	config.usage.alternatives_priority = ConfigSelection(default = "1", choices = [
 		("0", "DVB-S/-C/-T"),
 		("1", "DVB-S/-T/-C"),
 		("2", "DVB-C/-S/-T"),
@@ -283,7 +283,7 @@ def InitUsageConfig():
 
 	config.misc.disable_background_scan = ConfigYesNo(default = False)
 	config.misc.use_ci_assignment = ConfigYesNo(default = False)
-	config.usage.show_event_progress_in_servicelist = ConfigSelection(default = 'barright', choices = [
+	config.usage.show_event_progress_in_servicelist = ConfigSelection(default = 'percright', choices = [
 		('barleft', _("Progress bar left")),
 		('barright', _("Progress bar right")),
 		('percleft', _("Percentage left")),
diff --git a/lib/service/servicedvb.cpp b/lib/service/servicedvb.cpp
index d1118ad7f..9791c3315 100644
--- a/lib/service/servicedvb.cpp
+++ b/lib/service/servicedvb.cpp
@@ -1737,9 +1737,9 @@ RESULT eDVBServicePlay::timeshift(ePtr<iTimeshiftService> &ptr)
 				return -2;
 			}
 
-			if (((off_t)fs.f_bavail) * ((off_t)fs.f_bsize) < 200*1024*1024LL)
+			if (((off_t)fs.f_bavail) * ((off_t)fs.f_bsize) < 1024*1024*1024LL)
 			{
-				eDebug("[eDVBServicePlay] timeshift not enough diskspace for timeshift! (less than 200MB)");
+				eDebug("[eDVBServicePlay] timeshift not enough diskspace for timeshift! (less than 1GB)");
 				return -3;
 			}
 		}
diff -Naur enigma2-PLi/configure.ac enigma2-PersianPrince/configure.ac
--- enigma2-PLi/configure.ac	2018-12-30 16:27:10.128276455 +0330
+++ enigma2-PersianPrince/configure.ac	2018-12-30 16:47:05.221877040 +0330
@@ -46,7 +46,7 @@
 
 AC_ARG_WITH(crashlogemail,
 	[  --with-crashlogemail=crash log email address],
-	[CRASHLOGEMAIL="$withval"],[CRASHLOGEMAIL="the OpenPLi forum"])
+	[CRASHLOGEMAIL="$withval"],[CRASHLOGEMAIL="crash@openvision.tech"])
 AC_SUBST(CRASHLOGEMAIL)
 AC_DEFINE_UNQUOTED(CRASH_EMAILADDR,"$CRASHLOGEMAIL",[crash log email address])
 
diff -Naur enigma2-PLi/lib/python/Plugins/Extensions/MediaPlayer/settings.py enigma2-PersianPrince/lib/python/Plugins/Extensions/MediaPlayer/settings.py
--- enigma2-PLi/lib/python/Plugins/Extensions/MediaPlayer/settings.py	2018-12-30 16:27:10.300273466 +0330
+++ enigma2-PersianPrince/lib/python/Plugins/Extensions/MediaPlayer/settings.py	2018-12-30 16:30:10.309082040 +0330
@@ -13,7 +13,7 @@
 config.mediaplayer.defaultDir = ConfigDirectory()
 config.mediaplayer.sortPlaylists = ConfigYesNo(default=False)
 config.mediaplayer.alwaysHideInfoBar = ConfigYesNo(default=True)
-config.mediaplayer.onMainMenu = ConfigYesNo(default=False)
+config.mediaplayer.onMainMenu = ConfigYesNo(default=True)
 
 class DirectoryBrowser(Screen, HelpableScreen):
 
diff -Naur enigma2-PLi/lib/python/Plugins/SystemPlugins/OSDPositionSetup/overscanwizard.py enigma2-PersianPrince/lib/python/Plugins/SystemPlugins/OSDPositionSetup/overscanwizard.py
--- enigma2-PLi/lib/python/Plugins/SystemPlugins/OSDPositionSetup/overscanwizard.py	2018-12-30 16:27:10.312273257 +0330
+++ enigma2-PersianPrince/lib/python/Plugins/SystemPlugins/OSDPositionSetup/overscanwizard.py	2018-12-30 16:49:12.355409152 +0330
@@ -90,7 +90,7 @@
 			self["introduction"].setText(_("It seems you did not see all the eight arrow heads. This means your TV "
 				"has overscan enabled, and is not configured properly.\n\n"
 				"Please refer to your TV's manual to find how you can disable overscan on your TV. Look for terms like 'Just fit', 'Full width', etc. "
-				"If you can't find it, ask other users at http://forums.openpli.org.\n\n"))
+				"If you can't find it, ask other users at http://openvision.tech\n\n"))
 			self.list.append(getConfigListEntry(_("Did you see all eight arrow heads?"), self.yes_no))
 			self.yes_no.value = True
 			self.save_new_position = False
diff -Naur enigma2-PLi/lib/python/Plugins/SystemPlugins/SoftwareManager/plugin.py enigma2-PersianPrince/lib/python/Plugins/SystemPlugins/SoftwareManager/plugin.py
--- enigma2-PLi/lib/python/Plugins/SystemPlugins/SoftwareManager/plugin.py	2018-12-30 16:27:10.320273118 +0330
+++ enigma2-PersianPrince/lib/python/Plugins/SystemPlugins/SoftwareManager/plugin.py	2018-12-30 16:30:51.852330057 +0330
@@ -47,7 +47,7 @@
 				 ("N", _("No, never")),
 				 ("ask", _("Always ask"))
 				], "Y")
-config.plugins.softwaremanager.onSetupMenu = ConfigYesNo(default=False)
+config.plugins.softwaremanager.onSetupMenu = ConfigYesNo(default=True)
 config.plugins.softwaremanager.onBlueButton = ConfigYesNo(default=False)
 config.plugins.softwaremanager.epgcache = ConfigYesNo(default=False)
 
diff -Naur enigma2-PLi/lib/python/Screens/About.py enigma2-PersianPrince/lib/python/Screens/About.py
--- enigma2-PLi/lib/python/Screens/About.py	2018-12-30 16:27:10.328272979 +0330
+++ enigma2-PersianPrince/lib/python/Screens/About.py	2018-12-30 16:38:44.503509547 +0330
@@ -193,15 +193,15 @@
 
 		self.project = 0
 		self.projects = [
-			("https://api.github.com/repos/openpli/enigma2/commits" + branch, "Enigma2"),
-			("https://api.github.com/repos/openpli/openpli-oe-core/commits" + branch, "Openpli Oe Core"),
+			("https://api.github.com/repos/openpli/enigma2/commits" + branch, "Enigma2 - PLi"),
+			("https://api.github.com/repos/OpenVisionE2/enigma2-openpli-rpi/commits" + branch, "Enigma2 - RPi"),
+			("https://api.github.com/repos/OpenVisionE2/enigma2-openpli-sh4/commits" + branch, "Enigma2 - SH4"),
+			("https://api.github.com/repos/openpli/openpli-oe-core/commits" + branch, "OE - PLi"),
+			("https://api.github.com/repos/OpenVisionE2/openvision-oe/commits" + branch, "OE - Vision"),
+			("https://api.github.com/repos/OpenVisionE2/extra_rc_models/commits", "Extra RC Models"),
 			("https://api.github.com/repos/openpli/enigma2-plugins/commits", "Enigma2 Plugins"),
-			("https://api.github.com/repos/openpli/aio-grab/commits", "Aio Grab"),
-			("https://api.github.com/repos/openpli/enigma2-plugin-extensions-epgimport/commits", "Plugin EPGImport"),
-			("https://api.github.com/repos/openpli/enigma2-plugin-skins-magic/commits", "Skin Magic SD"),
-			("https://api.github.com/repos/littlesat/skin-PLiHD/commits", "Skin PLi HD"),
-			("https://api.github.com/repos/E2OpenPlugins/e2openplugin-OpenWebif/commits", "OpenWebif"),
-			("https://api.github.com/repos/haroo/HansSettings/commits", "Hans settings")
+			("https://api.github.com/repos/E2OpenPlugins/e2openplugin-OpenWebif/commits", "Open WebIF"),
+			("https://api.github.com/repos/OpenVisionE2/BackupSuite/commits", "Backup Suite")
 		]
 		self.cachedProjects = {}
 		self.Timer = eTimer()
diff -Naur enigma2-PLi/lib/python/Screens/SoftwareUpdate.py enigma2-PersianPrince/lib/python/Screens/SoftwareUpdate.py
--- enigma2-PLi/lib/python/Screens/SoftwareUpdate.py	2018-12-30 16:27:10.336272840 +0330
+++ enigma2-PersianPrince/lib/python/Screens/SoftwareUpdate.py	2018-12-30 16:48:22.892370031 +0330
@@ -84,7 +84,7 @@
 		try:
 			# TODO: Use Twisted's URL fetcher, urlopen is evil. And it can
 			# run in parallel to the package update.
-			url = "https://openpli.org/status/"
+			url = "https://openvision.tech/status/"
 			try:
 				status = urlopen(url, timeout=5).read().split('!', 1)
 			except:
@@ -93,14 +93,14 @@
 				status = urlopen(url, timeout=5, context=_create_unverified_context()).read().split('!', 1)
 				print status
 			if getBoxType() in status[0].split(','):
-				message = len(status) > 1 and status[1] or _("The current image might not be stable.\nFor more information see %s.") % ("www.openpli.org")
+				message = len(status) > 1 and status[1] or _("The current image might not be stable.\nFor more information see %s.") % ("www.openvision.tech")
 				# strip any HTML that may be in the message, but retain line breaks
 				import re
 				message = message.replace("<br />", "\n\n").replace("<br>", "\n\n")
 				message = re.sub('<[^<]+?>', '', re.sub('&#8209;', '-', message))
 				picon = MessageBox.TYPE_ERROR
 		except:
-			message = _("The status of the current image could not be checked because %s can not be reached.") % ("www.openpli.org")
+			message = _("The status of the current image could not be checked because %s can not be reached.") % ("www.openvision.tech")
 			picon = MessageBox.TYPE_ERROR
 		socket.setdefaulttimeout(currentTimeoutDefault)
 		if message != "":
@@ -119,7 +119,7 @@
 			from datetime import datetime
 			imageVersion = about.getImageTypeString().split(" ")[1]
 			imageVersion = (int(imageVersion) < 5 and "%.1f" or "%s") % int(imageVersion)
-			url = "https://openpli.org/download/timestamp/%s~%s" % (HardwareInfo().get_device_model(), imageVersion)
+			url = "https://openvision.tech/download/timestamp/%s~%s" % (HardwareInfo().get_device_model(), imageVersion)
 			try:
 				latestImageTimestamp = datetime.fromtimestamp(int(urlopen(url, timeout=5).read())).strftime(_("%Y-%m-%d %H:%M"))
 			except:
