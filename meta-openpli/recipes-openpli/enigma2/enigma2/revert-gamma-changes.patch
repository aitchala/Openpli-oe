diff --git a/lib/dvb/decoder.cpp b/lib/dvb/decoder.cpp
index 8fc1faee3..3fdc9e6ec 100644
--- a/lib/dvb/decoder.cpp
+++ b/lib/dvb/decoder.cpp
@@ -246,7 +246,7 @@ int eDVBVideo::m_close_invalidates_attributes = -1;
 
 eDVBVideo::eDVBVideo(eDVBDemux *demux, int dev)
 	: m_demux(demux), m_dev(dev),
-	m_width(-1), m_height(-1), m_framerate(-1), m_aspect(-1), m_progressive(-1), m_gamma(-1)
+	m_width(-1), m_height(-1), m_framerate(-1), m_aspect(-1), m_progressive(-1)
 {
 	char filename[128];
 	sprintf(filename, "/dev/dvb/adapter%d/video%d", demux ? demux->adapter : 0, dev);
@@ -554,21 +554,6 @@ void eDVBVideo::video_event(int)
 				eDebugNoNewLine("PROGRESSIVE_CHANGED %d\n", m_progressive);
 				/* emit */ m_event(event);
 			}
-			else if (evt.type == 17 /*VIDEO_EVENT_GAMMA_CHANGED*/)
-			{
-				struct iTSMPEGDecoder::videoEvent event;
-				event.type = iTSMPEGDecoder::videoEvent::eventGammaChanged;
-				/*
-				 * Possible gamma values
-				 * 0: Traditional gamma - SDR luminance range
-				 * 1: Traditional gamma - HDR luminance range
-				 * 2: SMPTE ST2084 (aka HDR10)
-				 * 3: Hybrid Log-gamma
-				 */
-				m_gamma = event.gamma = evt.u.frame_rate;
-				eDebugNoNewLine("GAMMA_CHANGED %d\n", m_gamma);
-				/* emit */ m_event(event);
-			}
 			else
 				eDebugNoNewLine("unhandled DVBAPI Video Event %d\n", evt.type);
 		}
@@ -658,21 +643,6 @@ int eDVBVideo::getFrameRate()
 	return m_framerate;
 }
 
-int eDVBVideo::getGamma()
-{
-	/* when closing the video device invalidates the attributes, we can rely on VIDEO_EVENTs */
-	if (!m_close_invalidates_attributes)
-	{
-		if (m_gamma == -1)
-		{
-			char tmp[64];
-			sprintf(tmp, "/proc/stb/vmpeg/%d/gamma", m_dev);
-			CFile::parseIntHex(&m_gamma, tmp);
-		}
-	}
-	return m_gamma;
-}
-
 DEFINE_REF(eDVBPCR);
 
 eDVBPCR::eDVBPCR(eDVBDemux *demux, int dev): m_demux(demux), m_dev(dev)
@@ -1350,10 +1320,3 @@ int eTSMPEGDecoder::getVideoAspect()
 		return m_video->getAspect();
 	return -1;
 }
-
-int eTSMPEGDecoder::getVideoGamma()
-{
-	if (m_video)
-		return m_video->getGamma();
-	return -1;
-}
diff --git a/lib/dvb/decoder.h b/lib/dvb/decoder.h
index ac5a8fc75..8ed600d09 100644
--- a/lib/dvb/decoder.h
+++ b/lib/dvb/decoder.h
@@ -37,7 +37,7 @@ private:
 	ePtr<eSocketNotifier> m_sn;
 	void video_event(int what);
 	sigc::signal1<void, struct iTSMPEGDecoder::videoEvent> m_event;
-	int m_width, m_height, m_framerate, m_aspect, m_progressive, m_gamma;
+	int m_width, m_height, m_framerate, m_aspect, m_progressive;
 	static int readApiSize(int fd, int &xres, int &yres, int &aspect);
 public:
 	enum { MPEG2, MPEG4_H264, VC1 = 3, MPEG4_Part2, VC1_SM, MPEG1, H265_HEVC, AVS = 16 };
@@ -57,7 +57,6 @@ public:
 	int getProgressive();
 	int getFrameRate();
 	int getAspect();
-	int getGamma();
 };
 
 class eDVBPCR: public iObject
@@ -174,7 +173,6 @@ public:
 	int getVideoProgressive();
 	int getVideoFrameRate();
 	int getVideoAspect();
-	int getVideoGamma();
 	static RESULT setHwPCMDelay(int delay);
 	static RESULT setHwAC3Delay(int delay);
 };
diff --git a/lib/dvb/idvb.h b/lib/dvb/idvb.h
index 6d26a44bd..afbb32ef7 100644
--- a/lib/dvb/idvb.h
+++ b/lib/dvb/idvb.h
@@ -753,15 +753,13 @@ public:
 		enum { eventUnknown = 0,
 			eventSizeChanged = VIDEO_EVENT_SIZE_CHANGED,
 			eventFrameRateChanged = VIDEO_EVENT_FRAME_RATE_CHANGED,
-			eventProgressiveChanged = 16,
-			eventGammaChanged = 17
+			eventProgressiveChanged = 16
 		} type;
 		unsigned char aspect;
 		unsigned short height;
 		unsigned short width;
 		bool progressive;
 		unsigned short framerate;
-		unsigned short gamma;
 	};
 
 	virtual RESULT connectVideoEvent(const sigc::slot1<void, struct videoEvent> &event, ePtr<eConnection> &connection) = 0;
@@ -771,7 +769,6 @@ public:
 	virtual int getVideoProgressive() = 0;
 	virtual int getVideoFrameRate() = 0;
 	virtual int getVideoAspect() = 0;
-	virtual int getVideoGamma() = 0;
 };
 
 #endif //SWIG
diff --git a/lib/python/Components/Converter/PliExtraInfo.py b/lib/python/Components/Converter/PliExtraInfo.py
index 8d5a9b5ef..29f0fcc0d 100644
--- a/lib/python/Components/Converter/PliExtraInfo.py
+++ b/lib/python/Components/Converter/PliExtraInfo.py
@@ -152,8 +152,7 @@ class PliExtraInfo(Poll, Converter, object):
 		yres = info.getInfo(iServiceInformation.sVideoHeight)
 		mode = ("i", "p", " ")[info.getInfo(iServiceInformation.sProgressive)]
 		fps  = str((info.getInfo(iServiceInformation.sFrameRate) + 500) / 1000)
-		gamma = ("SDR", "HDR", "HDR10", "HLG", "")[info.getInfo(iServiceInformation.sGamma)]
-		return str(xres) + "x" + str(yres) + mode + fps + addspace(gamma)
+		return str(xres) + "x" + str(yres) + mode + fps
 
 	def createVideoCodec(self, info):
 		return codec_data.get(info.getInfo(iServiceInformation.sVideoType), "N/A")
diff --git a/lib/python/Screens/ServiceInfo.py b/lib/python/Screens/ServiceInfo.py
index ec75b99e5..13b52ef8d 100644
--- a/lib/python/Screens/ServiceInfo.py
+++ b/lib/python/Screens/ServiceInfo.py
@@ -153,9 +153,6 @@ class ServiceInfo(Screen):
 					aspect = self.getServiceInfoValue(iServiceInformation.sAspect)
 					aspect = aspect in ( 1, 2, 5, 6, 9, 0xA, 0xD, 0xE ) and "4:3" or "16:9"
 					resolution += " - ["+aspect+"]"
-				gamma = ("SDR", "HDR", "HDR10", "HLG", "")[self.info.getInfo(iServiceInformation.sGamma)]
-				if gamma:
-					resolution += " - " + gamma
 			self.service = self.session.nav.getCurrentService()
 			if "%3a//" in refstr and reftype not in (1,257,4098,4114):
 			#IPTV 4097 5001, no PIDs shown
diff --git a/lib/service/iservice.h b/lib/service/iservice.h
index e5bb2666e..fd031b788 100644
--- a/lib/service/iservice.h
+++ b/lib/service/iservice.h
@@ -392,8 +392,6 @@ public:
 		sIsDedicated3D,
 		sCenterDVBSubs,
 
-		sGamma,
-
 		sUser = 0x100
 	};
 	enum {
@@ -932,8 +930,6 @@ public:
 
 		evHBBTVInfo,
 
-		evVideoGammaChanged,
-
 		evUser = 0x100
 	};
 };
diff --git a/lib/service/servicedvb.cpp b/lib/service/servicedvb.cpp
index d1118ad7f..fb730fc88 100644
--- a/lib/service/servicedvb.cpp
+++ b/lib/service/servicedvb.cpp
@@ -1919,9 +1919,6 @@ int eDVBServicePlay::getInfo(int w)
 			return aspect;
 		break;
 	}
-	case sGamma:
-		if (m_decoder) return m_decoder->getVideoGamma();
-		break;
 	case sIsCrypted:
 		if (no_program_info) return false;
 		return program.isCrypted();
@@ -3562,9 +3559,6 @@ void eDVBServicePlay::video_event(struct iTSMPEGDecoder::videoEvent event)
 		case iTSMPEGDecoder::videoEvent::eventProgressiveChanged:
 			m_event((iPlayableService*)this, evVideoProgressiveChanged);
 			break;
-		case iTSMPEGDecoder::videoEvent::eventGammaChanged:
-			m_event((iPlayableService*)this, evVideoGammaChanged);
-			break;
 		default:
 			break;
 	}
